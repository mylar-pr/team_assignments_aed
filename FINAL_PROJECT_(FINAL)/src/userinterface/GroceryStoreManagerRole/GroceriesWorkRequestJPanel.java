/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.GroceryStoreManagerRole;

import Business.Supplies.DeliveryMan;
import Business.EcoSystem;
import Business.Organization.GroceriesOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.GroceriesWorkRequest;
import Business.WorkQueue.MedicineWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author prajw
 */
public class GroceriesWorkRequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form GroceriesWorkRequestJPanel
     */
    JPanel userProcessContainer;
    GroceriesWorkRequest request;
    EcoSystem system;
    UserAccount userAccount;
    GroceriesOrganization groceriesOrganization;
    public GroceriesWorkRequestJPanel(JPanel userProcessContainer, GroceriesWorkRequest request, EcoSystem system, GroceriesOrganization groceriesOrganization) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.request = request;
        this.system = system;
        this.userAccount = userAccount;
        this.groceriesOrganization = groceriesOrganization;
        populateDeliveryManTable();
        
          
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton = new javax.swing.JButton();
        submitJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        deliveryMenJTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton.setBackground(new java.awt.Color(0, 0, 51));
        backJButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        backJButton.setForeground(new java.awt.Color(255, 255, 255));
        backJButton.setText("Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, -1, 40));

        submitJButton.setBackground(new java.awt.Color(0, 0, 51));
        submitJButton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        submitJButton.setForeground(new java.awt.Color(255, 255, 255));
        submitJButton.setText("Submit Result");
        submitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitJButtonActionPerformed(evt);
            }
        });
        add(submitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, -1, 40));

        deliveryMenJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Phone Number", "Age"
            }
        ));
        jScrollPane1.setViewportView(deliveryMenJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 430, 120));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        StoreManagerWorkAreaJPanel dwjp = (StoreManagerWorkAreaJPanel) component;
        dwjp.populateRequestTable();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void submitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitJButtonActionPerformed
        int row = deliveryMenJTable.getSelectedRow();
        System.out.println("DeliveryMan row"+ String.valueOf(row));
        int count = deliveryMenJTable.getSelectedRowCount();
        System.out.println("DeliveryMan row"+String.valueOf(count));
        
        if(row < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        DeliveryMan deliveryMan = (DeliveryMan) deliveryMenJTable.getModel().getValueAt(row, 0);
        
        request.setMessage(deliveryMan +"");
        
        String sender = request.getSender().toString();
        System.out.println("Sender ----->"+sender);
//        System.out.println(groceriesOrganization.getWorkQueue().getWorkRequestList());
        for(WorkRequest all_requests : groceriesOrganization.getWorkQueue().getWorkRequestList()){
//            System.out.println("Sender inside loop ----->");
//            System.out.println(all_requests.getSender().toString());
            if(all_requests.getSender().toString().equalsIgnoreCase(sender)){
                all_requests.setMessage(deliveryMan + "");
            }
        }
        
        
        
//        if(resultJTextField.getText().isEmpty()){
//            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
//            return;
//        }
//        request.setTestResult(resultJTextField.getText());
        request.setStatus("Completed");
        
        system.getDmd().deleteItem(deliveryMan);
        populateDeliveryManTable();
        JOptionPane.showMessageDialog(null, deliveryMan + "  is assigned for delivery.", "Warning", JOptionPane.WARNING_MESSAGE);
//            populateRequestTable();
    }//GEN-LAST:event_submitJButtonActionPerformed

    public void populateDeliveryManTable(){
        DefaultTableModel model = (DefaultTableModel) deliveryMenJTable.getModel();
        model.setRowCount(0);
        System.out.println("inside populateMenuTable---2---");
//        groceriesDirectory.getDeliveryMan_Directory();
        System.out.println("inside populateMenuTable---3---");
        for(DeliveryMan item: system.getDmd().getDeliveryMan_Directory()){
//                    System.out.println("inside for loop ---3---");
                    Object[] row = new Object[3];
                    row[0] = item; 
                    row[1] = item.getPhoneNumber();
                    row[2] = item.getAge();
                    model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton;
    private javax.swing.JTable deliveryMenJTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton submitJButton;
    // End of variables declaration//GEN-END:variables
}
