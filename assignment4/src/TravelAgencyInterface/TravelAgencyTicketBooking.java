/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package TravelAgencyInterface;

import Business.Airliner;
import Business.AirlinerDirectory;
import Business.BookingDirectory;
import Business.Customer;
import Business.CustomerDirectory;
import Business.FlightDirectory;
import Business.Flights;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author abhinavnagaraj
 */
public class TravelAgencyTicketBooking extends javax.swing.JPanel {

    /**
     * Creates new form TravelAgencyTicketBooking
     */
    JPanel right_Panel;
    AirlinerDirectory airlinerDirectory;
    Flights flights;
    Airliner airliner;
    ArrayList<Flights> AllflightsSchedule;
    ArrayList<Flights> FilteredFlights;
    Customer c;
    CustomerDirectory cust_dir;
    BookingDirectory booking_dir;
    

    TravelAgencyTicketBooking(JPanel right_Panel, AirlinerDirectory airlinerDirectory,CustomerDirectory cust_dir,BookingDirectory booking_dir) {
        initComponents();
        this.right_Panel = right_Panel;
        this.airlinerDirectory = airlinerDirectory;
        this.booking_dir = booking_dir;
        this.cust_dir = cust_dir;
        AllflightsSchedule = new ArrayList<Flights>();
        getAllFlights();
     }
    
    public void getAllFlights() {

        for (Airliner airliner : airlinerDirectory.getAirlinerDir()) {
            FlightDirectory a = airliner.getFlights_dir();
            for (Flights f : a.getFlightDirectory()) {
                AllflightsSchedule.add(f);
            }
        }

        for (Flights f : AllflightsSchedule) {
            System.out.println("flights re " + f.getFlightID() + "fdg" + f.getSource() + "fdg" + f.getTimeofDay());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txt_Source = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_Destination = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        DateChooser = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        btn_SearchFlights = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_SearchFlights = new javax.swing.JTable();
        btn_BookThisFlight = new javax.swing.JButton();
        comboTime = new javax.swing.JComboBox<>();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Search for flights");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 30, -1, -1));

        jLabel4.setText("Source:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));
        add(txt_Source, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 180, -1));

        jLabel2.setText("Destination:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 110, -1, -1));

        txt_Destination.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_DestinationActionPerformed(evt);
            }
        });
        add(txt_Destination, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 110, 180, -1));

        jLabel3.setText("Date:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, -1, -1));
        add(DateChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 200, -1));

        jLabel5.setText("Time of Day:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 170, -1, -1));

        btn_SearchFlights.setText("Search Flights");
        btn_SearchFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchFlightsActionPerformed(evt);
            }
        });
        add(btn_SearchFlights, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 220, -1, -1));

        tbl_SearchFlights.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airnliner Name", "Flight ID", "Time", "Seats", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbl_SearchFlights);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, 680, 180));

        btn_BookThisFlight.setText("Book this flight");
        btn_BookThisFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BookThisFlightActionPerformed(evt);
            }
        });
        add(btn_BookThisFlight, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 480, -1, -1));

        comboTime.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Morning", "Afternoon", "Evening" }));
        add(comboTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 170, 180, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txt_DestinationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_DestinationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_DestinationActionPerformed

    private void btn_SearchFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchFlightsActionPerformed
        // TODO add your handling code here:
        Populate_Table();
    }//GEN-LAST:event_btn_SearchFlightsActionPerformed

    private void btn_BookThisFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BookThisFlightActionPerformed
        // TODO add your handling code here:

        int selectrow = tbl_SearchFlights.getSelectedRow();
        if (selectrow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a flight to book");

        } else {

            Flights f = (Flights) tbl_SearchFlights.getValueAt(selectrow, 1);
         
            TA_CustomerSeatBooking tabs = new TA_CustomerSeatBooking(right_Panel, f, airlinerDirectory,booking_dir);
            right_Panel.add("TA_CustomerSeatBooking", tabs);
            CardLayout layout = (CardLayout) right_Panel.getLayout();
            layout.next(right_Panel);

        }
    }//GEN-LAST:event_btn_BookThisFlightActionPerformed

    public void Populate_Table() {
        
        SimpleDateFormat parser = new SimpleDateFormat("MM-dd-yyyy");

        FilteredFlights = new ArrayList<Flights>();

        for (Flights fs : AllflightsSchedule) {
          
            if (fs.getSource().equalsIgnoreCase(txt_Source.getText())
                    && fs.getDestination().equalsIgnoreCase(txt_Destination.getText())
                    && parser.format(fs.getDepartureTime()).equals(parser.format(DateChooser.getDate()))
                    && fs.getTimeofDay().equalsIgnoreCase((String) comboTime.getSelectedItem())) {
                FilteredFlights.add(fs);
            }

            DefaultTableModel model = (DefaultTableModel) tbl_SearchFlights.getModel();
            model.setRowCount(0);
            for (Flights f : FilteredFlights) {
                Object row[] = new Object[5];
                row[0] = f.getAirlinerName();
                row[1] = f;
                row[2] = f.getDepartureTime();
                row[3] = f.getTotalSeats();
                row[4] = f.getFlightPrice();
                model.addRow(row);

            }

        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser DateChooser;
    private javax.swing.JButton btn_BookThisFlight;
    private javax.swing.JButton btn_SearchFlights;
    private javax.swing.JComboBox<String> comboTime;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_SearchFlights;
    private javax.swing.JTextField txt_Destination;
    private javax.swing.JTextField txt_Source;
    // End of variables declaration//GEN-END:variables
}
