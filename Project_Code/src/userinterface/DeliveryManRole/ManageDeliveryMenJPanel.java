/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DeliveryManRole;

import Business.EcoSystem;
import Business.Supplies.DeliveryMan;
import Business.Supplies.DeliveryManDirectory;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author prajw
 */
public class ManageDeliveryMenJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageDeliveryMenJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem system;
    private DeliveryManDirectory deliveryManDirectory;
    private UserAccount account;
    public ManageDeliveryMenJPanel(JPanel userProcessContainer,UserAccount account, EcoSystem system, DeliveryManDirectory deliveryManDirectory) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.deliveryManDirectory = deliveryManDirectory;
        this.system = system;
        this.account = account;
//        System.out.println("Before populate menu table --1--");
        populateDeliveryManTable();
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        deliveryMenJTable = new javax.swing.JTable();
        addDeliveryBackBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        deliveryMenJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Phone Number", "Age"
            }
        ));
        jScrollPane1.setViewportView(deliveryMenJTable);

        addDeliveryBackBtn.setText("Back");
        addDeliveryBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDeliveryBackBtnActionPerformed(evt);
            }
        });

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addDeliveryBackBtn))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addDeliveryBackBtn)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButton2)
                .addContainerGap(109, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addDeliveryBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDeliveryBackBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        //        StoreManagementJPanel manageMenuJPanel = (StoreManagementJPanel) component;
        //        manageMenuJPanel.populate();

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_addDeliveryBackBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        
        int row = deliveryMenJTable.getSelectedRow();
        System.out.println("DeliveryMan row"+ String.valueOf(row));
        int count = deliveryMenJTable.getSelectedRowCount();
        System.out.println("DeliveryMan row"+String.valueOf(count));
        
        if(row < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        DeliveryMan deliveryMan = (DeliveryMan) deliveryMenJTable.getModel().getValueAt(row, 0);
        system.getDmd().deleteItem(deliveryMan);
        populateDeliveryManTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    public void populateDeliveryManTable(){
        DefaultTableModel model = (DefaultTableModel) deliveryMenJTable.getModel();
        model.setRowCount(0);
        System.out.println("inside populateMenuTable---2---");
//        groceriesDirectory.getDeliveryMan_Directory();
        System.out.println("inside populateMenuTable---3---");
        for(DeliveryMan item: system.getDmd().getDeliveryMan_Directory()){
//                    System.out.println("inside for loop ---3---");
                    Object[] row = new Object[3];
                    row[0] = item; 
                    row[1] = item.getPhoneNumber();
                    row[2] = item.getAge();
                    model.addRow(row);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDeliveryBackBtn;
    private javax.swing.JTable deliveryMenJTable;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
